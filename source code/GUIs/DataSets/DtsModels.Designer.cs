//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4963
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EzPos.GUIs.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DtsModels")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DtsModels : global::System.Data.DataSet {
        
        private DtbProductsDataTable tableDtbProducts;
        
        private DtbSaleReportsDataTable tableDtbSaleReports;
        
        private DtbExpensesDataTable tableDtbExpenses;
        
        private DtbDepositsDataTable tableDtbDeposits;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DtsModels() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DtsModels(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DtbProducts"] != null)) {
                    base.Tables.Add(new DtbProductsDataTable(ds.Tables["DtbProducts"]));
                }
                if ((ds.Tables["DtbSaleReports"] != null)) {
                    base.Tables.Add(new DtbSaleReportsDataTable(ds.Tables["DtbSaleReports"]));
                }
                if ((ds.Tables["DtbExpenses"] != null)) {
                    base.Tables.Add(new DtbExpensesDataTable(ds.Tables["DtbExpenses"]));
                }
                if ((ds.Tables["DtbDeposits"] != null)) {
                    base.Tables.Add(new DtbDepositsDataTable(ds.Tables["DtbDeposits"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbProductsDataTable DtbProducts {
            get {
                return this.tableDtbProducts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbSaleReportsDataTable DtbSaleReports {
            get {
                return this.tableDtbSaleReports;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbExpensesDataTable DtbExpenses {
            get {
                return this.tableDtbExpenses;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtbDepositsDataTable DtbDeposits {
            get {
                return this.tableDtbDeposits;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DtsModels cln = ((DtsModels)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DtbProducts"] != null)) {
                    base.Tables.Add(new DtbProductsDataTable(ds.Tables["DtbProducts"]));
                }
                if ((ds.Tables["DtbSaleReports"] != null)) {
                    base.Tables.Add(new DtbSaleReportsDataTable(ds.Tables["DtbSaleReports"]));
                }
                if ((ds.Tables["DtbExpenses"] != null)) {
                    base.Tables.Add(new DtbExpensesDataTable(ds.Tables["DtbExpenses"]));
                }
                if ((ds.Tables["DtbDeposits"] != null)) {
                    base.Tables.Add(new DtbDepositsDataTable(ds.Tables["DtbDeposits"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDtbProducts = ((DtbProductsDataTable)(base.Tables["DtbProducts"]));
            if ((initTable == true)) {
                if ((this.tableDtbProducts != null)) {
                    this.tableDtbProducts.InitVars();
                }
            }
            this.tableDtbSaleReports = ((DtbSaleReportsDataTable)(base.Tables["DtbSaleReports"]));
            if ((initTable == true)) {
                if ((this.tableDtbSaleReports != null)) {
                    this.tableDtbSaleReports.InitVars();
                }
            }
            this.tableDtbExpenses = ((DtbExpensesDataTable)(base.Tables["DtbExpenses"]));
            if ((initTable == true)) {
                if ((this.tableDtbExpenses != null)) {
                    this.tableDtbExpenses.InitVars();
                }
            }
            this.tableDtbDeposits = ((DtbDepositsDataTable)(base.Tables["DtbDeposits"]));
            if ((initTable == true)) {
                if ((this.tableDtbDeposits != null)) {
                    this.tableDtbDeposits.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DtsModels";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DtsModels.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDtbProducts = new DtbProductsDataTable();
            base.Tables.Add(this.tableDtbProducts);
            this.tableDtbSaleReports = new DtbSaleReportsDataTable();
            base.Tables.Add(this.tableDtbSaleReports);
            this.tableDtbExpenses = new DtbExpensesDataTable();
            base.Tables.Add(this.tableDtbExpenses);
            this.tableDtbDeposits = new DtbDepositsDataTable();
            base.Tables.Add(this.tableDtbDeposits);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDtbProducts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDtbSaleReports() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDtbExpenses() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDtbDeposits() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DtsModels ds = new DtsModels();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DtbProductsRowChangeEventHandler(object sender, DtbProductsRowChangeEvent e);
        
        public delegate void DtbSaleReportsRowChangeEventHandler(object sender, DtbSaleReportsRowChangeEvent e);
        
        public delegate void DtbExpensesRowChangeEventHandler(object sender, DtbExpensesRowChangeEvent e);
        
        public delegate void DtbDepositsRowChangeEventHandler(object sender, DtbDepositsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbProductsDataTable : global::System.Data.TypedTableBase<DtbProductsRow> {
            
            private global::System.Data.DataColumn columnProductId;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCategoryId;
            
            private global::System.Data.DataColumn columnCategoryStr;
            
            private global::System.Data.DataColumn columnMarkId;
            
            private global::System.Data.DataColumn columnMarkStr;
            
            private global::System.Data.DataColumn columnSizeId;
            
            private global::System.Data.DataColumn columnSizeStr;
            
            private global::System.Data.DataColumn columnColorId;
            
            private global::System.Data.DataColumn columnColorStr;
            
            private global::System.Data.DataColumn columnSkinId;
            
            private global::System.Data.DataColumn columnSkinStr;
            
            private global::System.Data.DataColumn columnPhotoPath;
            
            private global::System.Data.DataColumn columnUnitPriceIn;
            
            private global::System.Data.DataColumn columnExtraPercentage;
            
            private global::System.Data.DataColumn columnUnitPriceOut;
            
            private global::System.Data.DataColumn columnDiscountPercentage;
            
            private global::System.Data.DataColumn columnQtyInStock;
            
            private global::System.Data.DataColumn columnQtySold;
            
            private global::System.Data.DataColumn columnDisplayName;
            
            private global::System.Data.DataColumn columnProductPic;
            
            private global::System.Data.DataColumn columnPrintCheck;
            
            private global::System.Data.DataColumn columnPublicQty;
            
            private global::System.Data.DataColumn columnLastUpdate;
            
            private global::System.Data.DataColumn columnForeignCode;
            
            private global::System.Data.DataColumn columnQtyPromotion;
            
            private global::System.Data.DataColumn columnQtyBonus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductsDataTable() {
                this.TableName = "DtbProducts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbProductsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DtbProductsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIdColumn {
                get {
                    return this.columnProductId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryIdColumn {
                get {
                    return this.columnCategoryId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryStrColumn {
                get {
                    return this.columnCategoryStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarkIdColumn {
                get {
                    return this.columnMarkId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarkStrColumn {
                get {
                    return this.columnMarkStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeIdColumn {
                get {
                    return this.columnSizeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeStrColumn {
                get {
                    return this.columnSizeStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorIdColumn {
                get {
                    return this.columnColorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorStrColumn {
                get {
                    return this.columnColorStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SkinIdColumn {
                get {
                    return this.columnSkinId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SkinStrColumn {
                get {
                    return this.columnSkinStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhotoPathColumn {
                get {
                    return this.columnPhotoPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceInColumn {
                get {
                    return this.columnUnitPriceIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraPercentageColumn {
                get {
                    return this.columnExtraPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceOutColumn {
                get {
                    return this.columnUnitPriceOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountPercentageColumn {
                get {
                    return this.columnDiscountPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyInStockColumn {
                get {
                    return this.columnQtyInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtySoldColumn {
                get {
                    return this.columnQtySold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductPicColumn {
                get {
                    return this.columnProductPic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintCheckColumn {
                get {
                    return this.columnPrintCheck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PublicQtyColumn {
                get {
                    return this.columnPublicQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdateColumn {
                get {
                    return this.columnLastUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForeignCodeColumn {
                get {
                    return this.columnForeignCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyPromotionColumn {
                get {
                    return this.columnQtyPromotion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyBonusColumn {
                get {
                    return this.columnQtyBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductsRow this[int index] {
                get {
                    return ((DtbProductsRow)(this.Rows[index]));
                }
            }
            
            public event DtbProductsRowChangeEventHandler DtbProductsRowChanging;
            
            public event DtbProductsRowChangeEventHandler DtbProductsRowChanged;
            
            public event DtbProductsRowChangeEventHandler DtbProductsRowDeleting;
            
            public event DtbProductsRowChangeEventHandler DtbProductsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDtbProductsRow(DtbProductsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductsRow AddDtbProductsRow(
                        int ProductId, 
                        string ProductCode, 
                        string ProductName, 
                        string Description, 
                        int CategoryId, 
                        string CategoryStr, 
                        int MarkId, 
                        string MarkStr, 
                        int SizeId, 
                        string SizeStr, 
                        int ColorId, 
                        string ColorStr, 
                        int SkinId, 
                        string SkinStr, 
                        string PhotoPath, 
                        double UnitPriceIn, 
                        double ExtraPercentage, 
                        double UnitPriceOut, 
                        double DiscountPercentage, 
                        double QtyInStock, 
                        double QtySold, 
                        string DisplayName, 
                        string ProductPic, 
                        string PrintCheck, 
                        string PublicQty, 
                        System.DateTime LastUpdate, 
                        string ForeignCode, 
                        double QtyPromotion, 
                        double QtyBonus) {
                DtbProductsRow rowDtbProductsRow = ((DtbProductsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductId,
                        ProductCode,
                        ProductName,
                        Description,
                        CategoryId,
                        CategoryStr,
                        MarkId,
                        MarkStr,
                        SizeId,
                        SizeStr,
                        ColorId,
                        ColorStr,
                        SkinId,
                        SkinStr,
                        PhotoPath,
                        UnitPriceIn,
                        ExtraPercentage,
                        UnitPriceOut,
                        DiscountPercentage,
                        QtyInStock,
                        QtySold,
                        DisplayName,
                        ProductPic,
                        PrintCheck,
                        PublicQty,
                        LastUpdate,
                        ForeignCode,
                        QtyPromotion,
                        QtyBonus};
                rowDtbProductsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbProductsRow);
                return rowDtbProductsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductsRow FindByProductId(int ProductId) {
                return ((DtbProductsRow)(this.Rows.Find(new object[] {
                            ProductId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DtbProductsDataTable cln = ((DtbProductsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbProductsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProductId = base.Columns["ProductId"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnDescription = base.Columns["Description"];
                this.columnCategoryId = base.Columns["CategoryId"];
                this.columnCategoryStr = base.Columns["CategoryStr"];
                this.columnMarkId = base.Columns["MarkId"];
                this.columnMarkStr = base.Columns["MarkStr"];
                this.columnSizeId = base.Columns["SizeId"];
                this.columnSizeStr = base.Columns["SizeStr"];
                this.columnColorId = base.Columns["ColorId"];
                this.columnColorStr = base.Columns["ColorStr"];
                this.columnSkinId = base.Columns["SkinId"];
                this.columnSkinStr = base.Columns["SkinStr"];
                this.columnPhotoPath = base.Columns["PhotoPath"];
                this.columnUnitPriceIn = base.Columns["UnitPriceIn"];
                this.columnExtraPercentage = base.Columns["ExtraPercentage"];
                this.columnUnitPriceOut = base.Columns["UnitPriceOut"];
                this.columnDiscountPercentage = base.Columns["DiscountPercentage"];
                this.columnQtyInStock = base.Columns["QtyInStock"];
                this.columnQtySold = base.Columns["QtySold"];
                this.columnDisplayName = base.Columns["DisplayName"];
                this.columnProductPic = base.Columns["ProductPic"];
                this.columnPrintCheck = base.Columns["PrintCheck"];
                this.columnPublicQty = base.Columns["PublicQty"];
                this.columnLastUpdate = base.Columns["LastUpdate"];
                this.columnForeignCode = base.Columns["ForeignCode"];
                this.columnQtyPromotion = base.Columns["QtyPromotion"];
                this.columnQtyBonus = base.Columns["QtyBonus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProductId = new global::System.Data.DataColumn("ProductId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductId);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCategoryId = new global::System.Data.DataColumn("CategoryId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryId);
                this.columnCategoryStr = new global::System.Data.DataColumn("CategoryStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryStr);
                this.columnMarkId = new global::System.Data.DataColumn("MarkId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkId);
                this.columnMarkStr = new global::System.Data.DataColumn("MarkStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkStr);
                this.columnSizeId = new global::System.Data.DataColumn("SizeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeId);
                this.columnSizeStr = new global::System.Data.DataColumn("SizeStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeStr);
                this.columnColorId = new global::System.Data.DataColumn("ColorId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColorId);
                this.columnColorStr = new global::System.Data.DataColumn("ColorStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColorStr);
                this.columnSkinId = new global::System.Data.DataColumn("SkinId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkinId);
                this.columnSkinStr = new global::System.Data.DataColumn("SkinStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkinStr);
                this.columnPhotoPath = new global::System.Data.DataColumn("PhotoPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhotoPath);
                this.columnUnitPriceIn = new global::System.Data.DataColumn("UnitPriceIn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceIn);
                this.columnExtraPercentage = new global::System.Data.DataColumn("ExtraPercentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraPercentage);
                this.columnUnitPriceOut = new global::System.Data.DataColumn("UnitPriceOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceOut);
                this.columnDiscountPercentage = new global::System.Data.DataColumn("DiscountPercentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountPercentage);
                this.columnQtyInStock = new global::System.Data.DataColumn("QtyInStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyInStock);
                this.columnQtySold = new global::System.Data.DataColumn("QtySold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtySold);
                this.columnDisplayName = new global::System.Data.DataColumn("DisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayName);
                this.columnProductPic = new global::System.Data.DataColumn("ProductPic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductPic);
                this.columnPrintCheck = new global::System.Data.DataColumn("PrintCheck", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintCheck);
                this.columnPublicQty = new global::System.Data.DataColumn("PublicQty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicQty);
                this.columnLastUpdate = new global::System.Data.DataColumn("LastUpdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdate);
                this.columnForeignCode = new global::System.Data.DataColumn("ForeignCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeignCode);
                this.columnQtyPromotion = new global::System.Data.DataColumn("QtyPromotion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyPromotion);
                this.columnQtyBonus = new global::System.Data.DataColumn("QtyBonus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyBonus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DtbProductsProductId", new global::System.Data.DataColumn[] {
                                this.columnProductId}, true));
                this.columnProductId.AllowDBNull = false;
                this.columnProductId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductsRow NewDtbProductsRow() {
                return ((DtbProductsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbProductsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DtbProductsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbProductsRowChanged != null)) {
                    this.DtbProductsRowChanged(this, new DtbProductsRowChangeEvent(((DtbProductsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbProductsRowChanging != null)) {
                    this.DtbProductsRowChanging(this, new DtbProductsRowChangeEvent(((DtbProductsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbProductsRowDeleted != null)) {
                    this.DtbProductsRowDeleted(this, new DtbProductsRowChangeEvent(((DtbProductsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbProductsRowDeleting != null)) {
                    this.DtbProductsRowDeleting(this, new DtbProductsRowChangeEvent(((DtbProductsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDtbProductsRow(DtbProductsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DtsModels ds = new DtsModels();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbProductsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbSaleReportsDataTable : global::System.Data.TypedTableBase<DtbSaleReportsRow> {
            
            private global::System.Data.DataColumn columnReportId;
            
            private global::System.Data.DataColumn columnSaleOrderNumber;
            
            private global::System.Data.DataColumn columnSaleOrderDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCashierName;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnAmountSoldInt;
            
            private global::System.Data.DataColumn columnAmountPaidInt;
            
            private global::System.Data.DataColumn columnAmountPaidRiel;
            
            private global::System.Data.DataColumn columnAmountReturnInt;
            
            private global::System.Data.DataColumn columnAmountReturnRiel;
            
            private global::System.Data.DataColumn columnTotalDiscount;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnUnitPriceIn;
            
            private global::System.Data.DataColumn columnUnitPriceOut;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnQtySold;
            
            private global::System.Data.DataColumn columnSubTotal;
            
            private global::System.Data.DataColumn columnSaleItemId;
            
            private global::System.Data.DataColumn columnProductId;
            
            private global::System.Data.DataColumn columnCustomerId;
            
            private global::System.Data.DataColumn columnDiscountTypeId;
            
            private global::System.Data.DataColumn columnCardNumber;
            
            private global::System.Data.DataColumn columnReportHeader;
            
            private global::System.Data.DataColumn columnReferenceNum;
            
            private global::System.Data.DataColumn columnReportTypeStr;
            
            private global::System.Data.DataColumn columnSaleOrderId;
            
            private global::System.Data.DataColumn columnDepositAmount;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnCategoryStr;
            
            private global::System.Data.DataColumn columnPurchaseUnitPrice;
            
            private global::System.Data.DataColumn columnQtyBonus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbSaleReportsDataTable() {
                this.TableName = "DtbSaleReports";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbSaleReportsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DtbSaleReportsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportIdColumn {
                get {
                    return this.columnReportId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleOrderNumberColumn {
                get {
                    return this.columnSaleOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleOrderDateColumn {
                get {
                    return this.columnSaleOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashierNameColumn {
                get {
                    return this.columnCashierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountSoldIntColumn {
                get {
                    return this.columnAmountSoldInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountPaidIntColumn {
                get {
                    return this.columnAmountPaidInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountPaidRielColumn {
                get {
                    return this.columnAmountPaidRiel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountReturnIntColumn {
                get {
                    return this.columnAmountReturnInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountReturnRielColumn {
                get {
                    return this.columnAmountReturnRiel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDiscountColumn {
                get {
                    return this.columnTotalDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceInColumn {
                get {
                    return this.columnUnitPriceIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceOutColumn {
                get {
                    return this.columnUnitPriceOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtySoldColumn {
                get {
                    return this.columnQtySold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleItemIdColumn {
                get {
                    return this.columnSaleItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIdColumn {
                get {
                    return this.columnProductId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.columnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountTypeIdColumn {
                get {
                    return this.columnDiscountTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardNumberColumn {
                get {
                    return this.columnCardNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportHeaderColumn {
                get {
                    return this.columnReportHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceNumColumn {
                get {
                    return this.columnReferenceNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportTypeStrColumn {
                get {
                    return this.columnReportTypeStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleOrderIdColumn {
                get {
                    return this.columnSaleOrderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositAmountColumn {
                get {
                    return this.columnDepositAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryStrColumn {
                get {
                    return this.columnCategoryStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseUnitPriceColumn {
                get {
                    return this.columnPurchaseUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyBonusColumn {
                get {
                    return this.columnQtyBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbSaleReportsRow this[int index] {
                get {
                    return ((DtbSaleReportsRow)(this.Rows[index]));
                }
            }
            
            public event DtbSaleReportsRowChangeEventHandler DtbSaleReportsRowChanging;
            
            public event DtbSaleReportsRowChangeEventHandler DtbSaleReportsRowChanged;
            
            public event DtbSaleReportsRowChangeEventHandler DtbSaleReportsRowDeleting;
            
            public event DtbSaleReportsRowChangeEventHandler DtbSaleReportsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDtbSaleReportsRow(DtbSaleReportsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbSaleReportsRow AddDtbSaleReportsRow(
                        int ReportId, 
                        string SaleOrderNumber, 
                        System.DateTime SaleOrderDate, 
                        string CustomerName, 
                        string CashierName, 
                        double ExchangeRate, 
                        double AmountSoldInt, 
                        double AmountPaidInt, 
                        double AmountPaidRiel, 
                        double AmountReturnInt, 
                        double AmountReturnRiel, 
                        double TotalDiscount, 
                        string ProductName, 
                        double UnitPriceIn, 
                        double UnitPriceOut, 
                        double Discount, 
                        double QtySold, 
                        double SubTotal, 
                        int SaleItemId, 
                        int ProductId, 
                        int CustomerId, 
                        int DiscountTypeId, 
                        string CardNumber, 
                        int ReportHeader, 
                        string ReferenceNum, 
                        string ReportTypeStr, 
                        int SaleOrderId, 
                        double DepositAmount, 
                        string ProductCode, 
                        string CategoryStr, 
                        double PurchaseUnitPrice, 
                        double QtyBonus) {
                DtbSaleReportsRow rowDtbSaleReportsRow = ((DtbSaleReportsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReportId,
                        SaleOrderNumber,
                        SaleOrderDate,
                        CustomerName,
                        CashierName,
                        ExchangeRate,
                        AmountSoldInt,
                        AmountPaidInt,
                        AmountPaidRiel,
                        AmountReturnInt,
                        AmountReturnRiel,
                        TotalDiscount,
                        ProductName,
                        UnitPriceIn,
                        UnitPriceOut,
                        Discount,
                        QtySold,
                        SubTotal,
                        SaleItemId,
                        ProductId,
                        CustomerId,
                        DiscountTypeId,
                        CardNumber,
                        ReportHeader,
                        ReferenceNum,
                        ReportTypeStr,
                        SaleOrderId,
                        DepositAmount,
                        ProductCode,
                        CategoryStr,
                        PurchaseUnitPrice,
                        QtyBonus};
                rowDtbSaleReportsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbSaleReportsRow);
                return rowDtbSaleReportsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbSaleReportsRow FindByReportId(int ReportId) {
                return ((DtbSaleReportsRow)(this.Rows.Find(new object[] {
                            ReportId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DtbSaleReportsDataTable cln = ((DtbSaleReportsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbSaleReportsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReportId = base.Columns["ReportId"];
                this.columnSaleOrderNumber = base.Columns["SaleOrderNumber"];
                this.columnSaleOrderDate = base.Columns["SaleOrderDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCashierName = base.Columns["CashierName"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnAmountSoldInt = base.Columns["AmountSoldInt"];
                this.columnAmountPaidInt = base.Columns["AmountPaidInt"];
                this.columnAmountPaidRiel = base.Columns["AmountPaidRiel"];
                this.columnAmountReturnInt = base.Columns["AmountReturnInt"];
                this.columnAmountReturnRiel = base.Columns["AmountReturnRiel"];
                this.columnTotalDiscount = base.Columns["TotalDiscount"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnUnitPriceIn = base.Columns["UnitPriceIn"];
                this.columnUnitPriceOut = base.Columns["UnitPriceOut"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnQtySold = base.Columns["QtySold"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnSaleItemId = base.Columns["SaleItemId"];
                this.columnProductId = base.Columns["ProductId"];
                this.columnCustomerId = base.Columns["CustomerId"];
                this.columnDiscountTypeId = base.Columns["DiscountTypeId"];
                this.columnCardNumber = base.Columns["CardNumber"];
                this.columnReportHeader = base.Columns["ReportHeader"];
                this.columnReferenceNum = base.Columns["ReferenceNum"];
                this.columnReportTypeStr = base.Columns["ReportTypeStr"];
                this.columnSaleOrderId = base.Columns["SaleOrderId"];
                this.columnDepositAmount = base.Columns["DepositAmount"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnCategoryStr = base.Columns["CategoryStr"];
                this.columnPurchaseUnitPrice = base.Columns["PurchaseUnitPrice"];
                this.columnQtyBonus = base.Columns["QtyBonus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReportId = new global::System.Data.DataColumn("ReportId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportId);
                this.columnSaleOrderNumber = new global::System.Data.DataColumn("SaleOrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrderNumber);
                this.columnSaleOrderDate = new global::System.Data.DataColumn("SaleOrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrderDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCashierName = new global::System.Data.DataColumn("CashierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashierName);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnAmountSoldInt = new global::System.Data.DataColumn("AmountSoldInt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountSoldInt);
                this.columnAmountPaidInt = new global::System.Data.DataColumn("AmountPaidInt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaidInt);
                this.columnAmountPaidRiel = new global::System.Data.DataColumn("AmountPaidRiel", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaidRiel);
                this.columnAmountReturnInt = new global::System.Data.DataColumn("AmountReturnInt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountReturnInt);
                this.columnAmountReturnRiel = new global::System.Data.DataColumn("AmountReturnRiel", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountReturnRiel);
                this.columnTotalDiscount = new global::System.Data.DataColumn("TotalDiscount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDiscount);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnUnitPriceIn = new global::System.Data.DataColumn("UnitPriceIn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceIn);
                this.columnUnitPriceOut = new global::System.Data.DataColumn("UnitPriceOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceOut);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnQtySold = new global::System.Data.DataColumn("QtySold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtySold);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnSaleItemId = new global::System.Data.DataColumn("SaleItemId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleItemId);
                this.columnProductId = new global::System.Data.DataColumn("ProductId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductId);
                this.columnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerId);
                this.columnDiscountTypeId = new global::System.Data.DataColumn("DiscountTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountTypeId);
                this.columnCardNumber = new global::System.Data.DataColumn("CardNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardNumber);
                this.columnReportHeader = new global::System.Data.DataColumn("ReportHeader", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportHeader);
                this.columnReferenceNum = new global::System.Data.DataColumn("ReferenceNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceNum);
                this.columnReportTypeStr = new global::System.Data.DataColumn("ReportTypeStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportTypeStr);
                this.columnSaleOrderId = new global::System.Data.DataColumn("SaleOrderId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrderId);
                this.columnDepositAmount = new global::System.Data.DataColumn("DepositAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositAmount);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnCategoryStr = new global::System.Data.DataColumn("CategoryStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryStr);
                this.columnPurchaseUnitPrice = new global::System.Data.DataColumn("PurchaseUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseUnitPrice);
                this.columnQtyBonus = new global::System.Data.DataColumn("QtyBonus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyBonus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnReportId}, true));
                this.columnReportId.AllowDBNull = false;
                this.columnReportId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbSaleReportsRow NewDtbSaleReportsRow() {
                return ((DtbSaleReportsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbSaleReportsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DtbSaleReportsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbSaleReportsRowChanged != null)) {
                    this.DtbSaleReportsRowChanged(this, new DtbSaleReportsRowChangeEvent(((DtbSaleReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbSaleReportsRowChanging != null)) {
                    this.DtbSaleReportsRowChanging(this, new DtbSaleReportsRowChangeEvent(((DtbSaleReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbSaleReportsRowDeleted != null)) {
                    this.DtbSaleReportsRowDeleted(this, new DtbSaleReportsRowChangeEvent(((DtbSaleReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbSaleReportsRowDeleting != null)) {
                    this.DtbSaleReportsRowDeleting(this, new DtbSaleReportsRowChangeEvent(((DtbSaleReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDtbSaleReportsRow(DtbSaleReportsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DtsModels ds = new DtsModels();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbSaleReportsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbExpensesDataTable : global::System.Data.TypedTableBase<DtbExpensesRow> {
            
            private global::System.Data.DataColumn columnExpenseId;
            
            private global::System.Data.DataColumn columnExpenseTypeId;
            
            private global::System.Data.DataColumn columnExpenseTypeStr;
            
            private global::System.Data.DataColumn columnExpenseDate;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnExpenseAmountInt;
            
            private global::System.Data.DataColumn columnExpenseAmountRiel;
            
            private global::System.Data.DataColumn columnCurrencyId;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbExpensesDataTable() {
                this.TableName = "DtbExpenses";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbExpensesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DtbExpensesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpenseIdColumn {
                get {
                    return this.columnExpenseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpenseTypeIdColumn {
                get {
                    return this.columnExpenseTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpenseTypeStrColumn {
                get {
                    return this.columnExpenseTypeStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpenseDateColumn {
                get {
                    return this.columnExpenseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpenseAmountIntColumn {
                get {
                    return this.columnExpenseAmountInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpenseAmountRielColumn {
                get {
                    return this.columnExpenseAmountRiel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyIdColumn {
                get {
                    return this.columnCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbExpensesRow this[int index] {
                get {
                    return ((DtbExpensesRow)(this.Rows[index]));
                }
            }
            
            public event DtbExpensesRowChangeEventHandler DtbExpensesRowChanging;
            
            public event DtbExpensesRowChangeEventHandler DtbExpensesRowChanged;
            
            public event DtbExpensesRowChangeEventHandler DtbExpensesRowDeleting;
            
            public event DtbExpensesRowChangeEventHandler DtbExpensesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDtbExpensesRow(DtbExpensesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbExpensesRow AddDtbExpensesRow(int ExpenseId, int ExpenseTypeId, string ExpenseTypeStr, System.DateTime ExpenseDate, string Description, double ExpenseAmountInt, double ExpenseAmountRiel, int CurrencyId, double ExchangeRate) {
                DtbExpensesRow rowDtbExpensesRow = ((DtbExpensesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ExpenseId,
                        ExpenseTypeId,
                        ExpenseTypeStr,
                        ExpenseDate,
                        Description,
                        ExpenseAmountInt,
                        ExpenseAmountRiel,
                        CurrencyId,
                        ExchangeRate};
                rowDtbExpensesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbExpensesRow);
                return rowDtbExpensesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbExpensesRow FindByExpenseId(int ExpenseId) {
                return ((DtbExpensesRow)(this.Rows.Find(new object[] {
                            ExpenseId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DtbExpensesDataTable cln = ((DtbExpensesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbExpensesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnExpenseId = base.Columns["ExpenseId"];
                this.columnExpenseTypeId = base.Columns["ExpenseTypeId"];
                this.columnExpenseTypeStr = base.Columns["ExpenseTypeStr"];
                this.columnExpenseDate = base.Columns["ExpenseDate"];
                this.columnDescription = base.Columns["Description"];
                this.columnExpenseAmountInt = base.Columns["ExpenseAmountInt"];
                this.columnExpenseAmountRiel = base.Columns["ExpenseAmountRiel"];
                this.columnCurrencyId = base.Columns["CurrencyId"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnExpenseId = new global::System.Data.DataColumn("ExpenseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseId);
                this.columnExpenseTypeId = new global::System.Data.DataColumn("ExpenseTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseTypeId);
                this.columnExpenseTypeStr = new global::System.Data.DataColumn("ExpenseTypeStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseTypeStr);
                this.columnExpenseDate = new global::System.Data.DataColumn("ExpenseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseDate);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnExpenseAmountInt = new global::System.Data.DataColumn("ExpenseAmountInt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseAmountInt);
                this.columnExpenseAmountRiel = new global::System.Data.DataColumn("ExpenseAmountRiel", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpenseAmountRiel);
                this.columnCurrencyId = new global::System.Data.DataColumn("CurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyId);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DtbExpensesKey", new global::System.Data.DataColumn[] {
                                this.columnExpenseId}, true));
                this.columnExpenseId.AllowDBNull = false;
                this.columnExpenseId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbExpensesRow NewDtbExpensesRow() {
                return ((DtbExpensesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbExpensesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DtbExpensesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbExpensesRowChanged != null)) {
                    this.DtbExpensesRowChanged(this, new DtbExpensesRowChangeEvent(((DtbExpensesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbExpensesRowChanging != null)) {
                    this.DtbExpensesRowChanging(this, new DtbExpensesRowChangeEvent(((DtbExpensesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbExpensesRowDeleted != null)) {
                    this.DtbExpensesRowDeleted(this, new DtbExpensesRowChangeEvent(((DtbExpensesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbExpensesRowDeleting != null)) {
                    this.DtbExpensesRowDeleting(this, new DtbExpensesRowChangeEvent(((DtbExpensesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDtbExpensesRow(DtbExpensesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DtsModels ds = new DtsModels();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbExpensesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtbDepositsDataTable : global::System.Data.TypedTableBase<DtbDepositsRow> {
            
            private global::System.Data.DataColumn columnDepositId;
            
            private global::System.Data.DataColumn columnDepositNumber;
            
            private global::System.Data.DataColumn columnDepositDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCashierName;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnAmountSoldInt;
            
            private global::System.Data.DataColumn columnAmountPaidInt;
            
            private global::System.Data.DataColumn columnAmountPaidRiel;
            
            private global::System.Data.DataColumn columnAmountReturnInt;
            
            private global::System.Data.DataColumn columnAmountReturnRiel;
            
            private global::System.Data.DataColumn columnTotalDiscount;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnUnitPriceIn;
            
            private global::System.Data.DataColumn columnUnitPriceOut;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnQtySold;
            
            private global::System.Data.DataColumn columnSubTotal;
            
            private global::System.Data.DataColumn columnDepositItemId;
            
            private global::System.Data.DataColumn columnProductId;
            
            private global::System.Data.DataColumn columnCardNumber;
            
            private global::System.Data.DataColumn columnUpdateDate;
            
            private global::System.Data.DataColumn columnReferenceNum;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnReportHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbDepositsDataTable() {
                this.TableName = "DtbDeposits";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbDepositsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DtbDepositsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositIdColumn {
                get {
                    return this.columnDepositId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositNumberColumn {
                get {
                    return this.columnDepositNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositDateColumn {
                get {
                    return this.columnDepositDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashierNameColumn {
                get {
                    return this.columnCashierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountSoldIntColumn {
                get {
                    return this.columnAmountSoldInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountPaidIntColumn {
                get {
                    return this.columnAmountPaidInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountPaidRielColumn {
                get {
                    return this.columnAmountPaidRiel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountReturnIntColumn {
                get {
                    return this.columnAmountReturnInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountReturnRielColumn {
                get {
                    return this.columnAmountReturnRiel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDiscountColumn {
                get {
                    return this.columnTotalDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceInColumn {
                get {
                    return this.columnUnitPriceIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceOutColumn {
                get {
                    return this.columnUnitPriceOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtySoldColumn {
                get {
                    return this.columnQtySold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositItemIdColumn {
                get {
                    return this.columnDepositItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductIdColumn {
                get {
                    return this.columnProductId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CardNumberColumn {
                get {
                    return this.columnCardNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateColumn {
                get {
                    return this.columnUpdateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceNumColumn {
                get {
                    return this.columnReferenceNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportHeaderColumn {
                get {
                    return this.columnReportHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbDepositsRow this[int index] {
                get {
                    return ((DtbDepositsRow)(this.Rows[index]));
                }
            }
            
            public event DtbDepositsRowChangeEventHandler DtbDepositsRowChanging;
            
            public event DtbDepositsRowChangeEventHandler DtbDepositsRowChanged;
            
            public event DtbDepositsRowChangeEventHandler DtbDepositsRowDeleting;
            
            public event DtbDepositsRowChangeEventHandler DtbDepositsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDtbDepositsRow(DtbDepositsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbDepositsRow AddDtbDepositsRow(
                        int DepositId, 
                        string DepositNumber, 
                        System.DateTime DepositDate, 
                        string CustomerName, 
                        string CashierName, 
                        double ExchangeRate, 
                        double AmountSoldInt, 
                        double AmountPaidInt, 
                        double AmountPaidRiel, 
                        double AmountReturnInt, 
                        double AmountReturnRiel, 
                        double TotalDiscount, 
                        string ProductName, 
                        double UnitPriceIn, 
                        double UnitPriceOut, 
                        double Discount, 
                        double QtySold, 
                        double SubTotal, 
                        int DepositItemId, 
                        int ProductId, 
                        string CardNumber, 
                        System.DateTime UpdateDate, 
                        string ReferenceNum, 
                        string ProductCode, 
                        string ReportHeader) {
                DtbDepositsRow rowDtbDepositsRow = ((DtbDepositsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DepositId,
                        DepositNumber,
                        DepositDate,
                        CustomerName,
                        CashierName,
                        ExchangeRate,
                        AmountSoldInt,
                        AmountPaidInt,
                        AmountPaidRiel,
                        AmountReturnInt,
                        AmountReturnRiel,
                        TotalDiscount,
                        ProductName,
                        UnitPriceIn,
                        UnitPriceOut,
                        Discount,
                        QtySold,
                        SubTotal,
                        DepositItemId,
                        ProductId,
                        CardNumber,
                        UpdateDate,
                        ReferenceNum,
                        ProductCode,
                        ReportHeader};
                rowDtbDepositsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtbDepositsRow);
                return rowDtbDepositsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DtbDepositsDataTable cln = ((DtbDepositsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtbDepositsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDepositId = base.Columns["DepositId"];
                this.columnDepositNumber = base.Columns["DepositNumber"];
                this.columnDepositDate = base.Columns["DepositDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCashierName = base.Columns["CashierName"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnAmountSoldInt = base.Columns["AmountSoldInt"];
                this.columnAmountPaidInt = base.Columns["AmountPaidInt"];
                this.columnAmountPaidRiel = base.Columns["AmountPaidRiel"];
                this.columnAmountReturnInt = base.Columns["AmountReturnInt"];
                this.columnAmountReturnRiel = base.Columns["AmountReturnRiel"];
                this.columnTotalDiscount = base.Columns["TotalDiscount"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnUnitPriceIn = base.Columns["UnitPriceIn"];
                this.columnUnitPriceOut = base.Columns["UnitPriceOut"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnQtySold = base.Columns["QtySold"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnDepositItemId = base.Columns["DepositItemId"];
                this.columnProductId = base.Columns["ProductId"];
                this.columnCardNumber = base.Columns["CardNumber"];
                this.columnUpdateDate = base.Columns["UpdateDate"];
                this.columnReferenceNum = base.Columns["ReferenceNum"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnReportHeader = base.Columns["ReportHeader"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDepositId = new global::System.Data.DataColumn("DepositId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositId);
                this.columnDepositNumber = new global::System.Data.DataColumn("DepositNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositNumber);
                this.columnDepositDate = new global::System.Data.DataColumn("DepositDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCashierName = new global::System.Data.DataColumn("CashierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashierName);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnAmountSoldInt = new global::System.Data.DataColumn("AmountSoldInt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountSoldInt);
                this.columnAmountPaidInt = new global::System.Data.DataColumn("AmountPaidInt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaidInt);
                this.columnAmountPaidRiel = new global::System.Data.DataColumn("AmountPaidRiel", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPaidRiel);
                this.columnAmountReturnInt = new global::System.Data.DataColumn("AmountReturnInt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountReturnInt);
                this.columnAmountReturnRiel = new global::System.Data.DataColumn("AmountReturnRiel", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountReturnRiel);
                this.columnTotalDiscount = new global::System.Data.DataColumn("TotalDiscount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDiscount);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnUnitPriceIn = new global::System.Data.DataColumn("UnitPriceIn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceIn);
                this.columnUnitPriceOut = new global::System.Data.DataColumn("UnitPriceOut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceOut);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnQtySold = new global::System.Data.DataColumn("QtySold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtySold);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnDepositItemId = new global::System.Data.DataColumn("DepositItemId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositItemId);
                this.columnProductId = new global::System.Data.DataColumn("ProductId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductId);
                this.columnCardNumber = new global::System.Data.DataColumn("CardNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardNumber);
                this.columnUpdateDate = new global::System.Data.DataColumn("UpdateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDate);
                this.columnReferenceNum = new global::System.Data.DataColumn("ReferenceNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceNum);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnReportHeader = new global::System.Data.DataColumn("ReportHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportHeader);
                this.columnDepositId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbDepositsRow NewDtbDepositsRow() {
                return ((DtbDepositsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtbDepositsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DtbDepositsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtbDepositsRowChanged != null)) {
                    this.DtbDepositsRowChanged(this, new DtbDepositsRowChangeEvent(((DtbDepositsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtbDepositsRowChanging != null)) {
                    this.DtbDepositsRowChanging(this, new DtbDepositsRowChangeEvent(((DtbDepositsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtbDepositsRowDeleted != null)) {
                    this.DtbDepositsRowDeleted(this, new DtbDepositsRowChangeEvent(((DtbDepositsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtbDepositsRowDeleting != null)) {
                    this.DtbDepositsRowDeleting(this, new DtbDepositsRowChangeEvent(((DtbDepositsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDtbDepositsRow(DtbDepositsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DtsModels ds = new DtsModels();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtbDepositsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DtbProductsRow : global::System.Data.DataRow {
            
            private DtbProductsDataTable tableDtbProducts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbProductsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbProducts = ((DtbProductsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductId {
                get {
                    return ((int)(this[this.tableDtbProducts.ProductIdColumn]));
                }
                set {
                    this[this.tableDtbProducts.ProductIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CategoryId {
                get {
                    try {
                        return ((int)(this[this.tableDtbProducts.CategoryIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryId\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.CategoryIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryStr {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.CategoryStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryStr\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.CategoryStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MarkId {
                get {
                    try {
                        return ((int)(this[this.tableDtbProducts.MarkIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkId\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.MarkIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MarkStr {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.MarkStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkStr\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.MarkStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SizeId {
                get {
                    try {
                        return ((int)(this[this.tableDtbProducts.SizeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeId\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.SizeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SizeStr {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.SizeStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeStr\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.SizeStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ColorId {
                get {
                    try {
                        return ((int)(this[this.tableDtbProducts.ColorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColorId\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.ColorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColorStr {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.ColorStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColorStr\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.ColorStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SkinId {
                get {
                    try {
                        return ((int)(this[this.tableDtbProducts.SkinIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SkinId\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.SkinIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SkinStr {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.SkinStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SkinStr\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.SkinStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhotoPath {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.PhotoPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhotoPath\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.PhotoPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPriceIn {
                get {
                    try {
                        return ((double)(this[this.tableDtbProducts.UnitPriceInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceIn\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.UnitPriceInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExtraPercentage {
                get {
                    try {
                        return ((double)(this[this.tableDtbProducts.ExtraPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraPercentage\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.ExtraPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPriceOut {
                get {
                    try {
                        return ((double)(this[this.tableDtbProducts.UnitPriceOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceOut\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.UnitPriceOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DiscountPercentage {
                get {
                    try {
                        return ((double)(this[this.tableDtbProducts.DiscountPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountPercentage\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.DiscountPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QtyInStock {
                get {
                    try {
                        return ((double)(this[this.tableDtbProducts.QtyInStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyInStock\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.QtyInStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QtySold {
                get {
                    try {
                        return ((double)(this[this.tableDtbProducts.QtySoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtySold\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.QtySoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DisplayName {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.DisplayNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisplayName\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.DisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductPic {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.ProductPicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductPic\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.ProductPicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrintCheck {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.PrintCheckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintCheck\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.PrintCheckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PublicQty {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.PublicQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PublicQty\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.PublicQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastUpdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbProducts.LastUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdate\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.LastUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ForeignCode {
                get {
                    try {
                        return ((string)(this[this.tableDtbProducts.ForeignCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForeignCode\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.ForeignCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QtyPromotion {
                get {
                    try {
                        return ((double)(this[this.tableDtbProducts.QtyPromotionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyPromotion\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.QtyPromotionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QtyBonus {
                get {
                    try {
                        return ((double)(this[this.tableDtbProducts.QtyBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyBonus\' in table \'DtbProducts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbProducts.QtyBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableDtbProducts.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableDtbProducts.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableDtbProducts.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableDtbProducts.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableDtbProducts.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableDtbProducts.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryIdNull() {
                return this.IsNull(this.tableDtbProducts.CategoryIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryIdNull() {
                this[this.tableDtbProducts.CategoryIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryStrNull() {
                return this.IsNull(this.tableDtbProducts.CategoryStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryStrNull() {
                this[this.tableDtbProducts.CategoryStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarkIdNull() {
                return this.IsNull(this.tableDtbProducts.MarkIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarkIdNull() {
                this[this.tableDtbProducts.MarkIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarkStrNull() {
                return this.IsNull(this.tableDtbProducts.MarkStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarkStrNull() {
                this[this.tableDtbProducts.MarkStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeIdNull() {
                return this.IsNull(this.tableDtbProducts.SizeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeIdNull() {
                this[this.tableDtbProducts.SizeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeStrNull() {
                return this.IsNull(this.tableDtbProducts.SizeStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeStrNull() {
                this[this.tableDtbProducts.SizeStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorIdNull() {
                return this.IsNull(this.tableDtbProducts.ColorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorIdNull() {
                this[this.tableDtbProducts.ColorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorStrNull() {
                return this.IsNull(this.tableDtbProducts.ColorStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorStrNull() {
                this[this.tableDtbProducts.ColorStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSkinIdNull() {
                return this.IsNull(this.tableDtbProducts.SkinIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSkinIdNull() {
                this[this.tableDtbProducts.SkinIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSkinStrNull() {
                return this.IsNull(this.tableDtbProducts.SkinStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSkinStrNull() {
                this[this.tableDtbProducts.SkinStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhotoPathNull() {
                return this.IsNull(this.tableDtbProducts.PhotoPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhotoPathNull() {
                this[this.tableDtbProducts.PhotoPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceInNull() {
                return this.IsNull(this.tableDtbProducts.UnitPriceInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceInNull() {
                this[this.tableDtbProducts.UnitPriceInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraPercentageNull() {
                return this.IsNull(this.tableDtbProducts.ExtraPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraPercentageNull() {
                this[this.tableDtbProducts.ExtraPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceOutNull() {
                return this.IsNull(this.tableDtbProducts.UnitPriceOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceOutNull() {
                this[this.tableDtbProducts.UnitPriceOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountPercentageNull() {
                return this.IsNull(this.tableDtbProducts.DiscountPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountPercentageNull() {
                this[this.tableDtbProducts.DiscountPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyInStockNull() {
                return this.IsNull(this.tableDtbProducts.QtyInStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyInStockNull() {
                this[this.tableDtbProducts.QtyInStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtySoldNull() {
                return this.IsNull(this.tableDtbProducts.QtySoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtySoldNull() {
                this[this.tableDtbProducts.QtySoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayNameNull() {
                return this.IsNull(this.tableDtbProducts.DisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayNameNull() {
                this[this.tableDtbProducts.DisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductPicNull() {
                return this.IsNull(this.tableDtbProducts.ProductPicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductPicNull() {
                this[this.tableDtbProducts.ProductPicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintCheckNull() {
                return this.IsNull(this.tableDtbProducts.PrintCheckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintCheckNull() {
                this[this.tableDtbProducts.PrintCheckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPublicQtyNull() {
                return this.IsNull(this.tableDtbProducts.PublicQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPublicQtyNull() {
                this[this.tableDtbProducts.PublicQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdateNull() {
                return this.IsNull(this.tableDtbProducts.LastUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdateNull() {
                this[this.tableDtbProducts.LastUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForeignCodeNull() {
                return this.IsNull(this.tableDtbProducts.ForeignCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForeignCodeNull() {
                this[this.tableDtbProducts.ForeignCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyPromotionNull() {
                return this.IsNull(this.tableDtbProducts.QtyPromotionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyPromotionNull() {
                this[this.tableDtbProducts.QtyPromotionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyBonusNull() {
                return this.IsNull(this.tableDtbProducts.QtyBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyBonusNull() {
                this[this.tableDtbProducts.QtyBonusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DtbSaleReportsRow : global::System.Data.DataRow {
            
            private DtbSaleReportsDataTable tableDtbSaleReports;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbSaleReportsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbSaleReports = ((DtbSaleReportsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReportId {
                get {
                    return ((int)(this[this.tableDtbSaleReports.ReportIdColumn]));
                }
                set {
                    this[this.tableDtbSaleReports.ReportIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaleOrderNumber {
                get {
                    try {
                        return ((string)(this[this.tableDtbSaleReports.SaleOrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrderNumber\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.SaleOrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SaleOrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbSaleReports.SaleOrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrderDate\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.SaleOrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableDtbSaleReports.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CashierName {
                get {
                    try {
                        return ((string)(this[this.tableDtbSaleReports.CashierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashierName\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.CashierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExchangeRate {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountSoldInt {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.AmountSoldIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountSoldInt\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.AmountSoldIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountPaidInt {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.AmountPaidIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaidInt\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.AmountPaidIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountPaidRiel {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.AmountPaidRielColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaidRiel\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.AmountPaidRielColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountReturnInt {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.AmountReturnIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountReturnInt\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.AmountReturnIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountReturnRiel {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.AmountReturnRielColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountReturnRiel\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.AmountReturnRielColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalDiscount {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.TotalDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDiscount\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.TotalDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableDtbSaleReports.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPriceIn {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.UnitPriceInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceIn\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.UnitPriceInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPriceOut {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.UnitPriceOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceOut\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.UnitPriceOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Discount {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QtySold {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.QtySoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtySold\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.QtySoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SubTotal {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotal\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.SubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SaleItemId {
                get {
                    try {
                        return ((int)(this[this.tableDtbSaleReports.SaleItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleItemId\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.SaleItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductId {
                get {
                    try {
                        return ((int)(this[this.tableDtbSaleReports.ProductIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductId\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.ProductIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerId {
                get {
                    try {
                        return ((int)(this[this.tableDtbSaleReports.CustomerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerId\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DiscountTypeId {
                get {
                    try {
                        return ((int)(this[this.tableDtbSaleReports.DiscountTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountTypeId\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.DiscountTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardNumber {
                get {
                    try {
                        return ((string)(this[this.tableDtbSaleReports.CardNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardNumber\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.CardNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReportHeader {
                get {
                    try {
                        return ((int)(this[this.tableDtbSaleReports.ReportHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportHeader\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.ReportHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceNum {
                get {
                    try {
                        return ((string)(this[this.tableDtbSaleReports.ReferenceNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceNum\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.ReferenceNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportTypeStr {
                get {
                    try {
                        return ((string)(this[this.tableDtbSaleReports.ReportTypeStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportTypeStr\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.ReportTypeStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SaleOrderId {
                get {
                    try {
                        return ((int)(this[this.tableDtbSaleReports.SaleOrderIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrderId\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.SaleOrderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DepositAmount {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.DepositAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositAmount\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.DepositAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableDtbSaleReports.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryStr {
                get {
                    try {
                        return ((string)(this[this.tableDtbSaleReports.CategoryStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryStr\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.CategoryStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PurchaseUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.PurchaseUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseUnitPrice\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.PurchaseUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QtyBonus {
                get {
                    try {
                        return ((double)(this[this.tableDtbSaleReports.QtyBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyBonus\' in table \'DtbSaleReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbSaleReports.QtyBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleOrderNumberNull() {
                return this.IsNull(this.tableDtbSaleReports.SaleOrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleOrderNumberNull() {
                this[this.tableDtbSaleReports.SaleOrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleOrderDateNull() {
                return this.IsNull(this.tableDtbSaleReports.SaleOrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleOrderDateNull() {
                this[this.tableDtbSaleReports.SaleOrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableDtbSaleReports.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableDtbSaleReports.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashierNameNull() {
                return this.IsNull(this.tableDtbSaleReports.CashierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashierNameNull() {
                this[this.tableDtbSaleReports.CashierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableDtbSaleReports.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExchangeRateNull() {
                this[this.tableDtbSaleReports.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountSoldIntNull() {
                return this.IsNull(this.tableDtbSaleReports.AmountSoldIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountSoldIntNull() {
                this[this.tableDtbSaleReports.AmountSoldIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountPaidIntNull() {
                return this.IsNull(this.tableDtbSaleReports.AmountPaidIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountPaidIntNull() {
                this[this.tableDtbSaleReports.AmountPaidIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountPaidRielNull() {
                return this.IsNull(this.tableDtbSaleReports.AmountPaidRielColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountPaidRielNull() {
                this[this.tableDtbSaleReports.AmountPaidRielColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountReturnIntNull() {
                return this.IsNull(this.tableDtbSaleReports.AmountReturnIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountReturnIntNull() {
                this[this.tableDtbSaleReports.AmountReturnIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountReturnRielNull() {
                return this.IsNull(this.tableDtbSaleReports.AmountReturnRielColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountReturnRielNull() {
                this[this.tableDtbSaleReports.AmountReturnRielColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDiscountNull() {
                return this.IsNull(this.tableDtbSaleReports.TotalDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDiscountNull() {
                this[this.tableDtbSaleReports.TotalDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableDtbSaleReports.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableDtbSaleReports.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceInNull() {
                return this.IsNull(this.tableDtbSaleReports.UnitPriceInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceInNull() {
                this[this.tableDtbSaleReports.UnitPriceInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceOutNull() {
                return this.IsNull(this.tableDtbSaleReports.UnitPriceOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceOutNull() {
                this[this.tableDtbSaleReports.UnitPriceOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableDtbSaleReports.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableDtbSaleReports.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtySoldNull() {
                return this.IsNull(this.tableDtbSaleReports.QtySoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtySoldNull() {
                this[this.tableDtbSaleReports.QtySoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.tableDtbSaleReports.SubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.tableDtbSaleReports.SubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleItemIdNull() {
                return this.IsNull(this.tableDtbSaleReports.SaleItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleItemIdNull() {
                this[this.tableDtbSaleReports.SaleItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIdNull() {
                return this.IsNull(this.tableDtbSaleReports.ProductIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIdNull() {
                this[this.tableDtbSaleReports.ProductIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIdNull() {
                return this.IsNull(this.tableDtbSaleReports.CustomerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIdNull() {
                this[this.tableDtbSaleReports.CustomerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountTypeIdNull() {
                return this.IsNull(this.tableDtbSaleReports.DiscountTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountTypeIdNull() {
                this[this.tableDtbSaleReports.DiscountTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardNumberNull() {
                return this.IsNull(this.tableDtbSaleReports.CardNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardNumberNull() {
                this[this.tableDtbSaleReports.CardNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportHeaderNull() {
                return this.IsNull(this.tableDtbSaleReports.ReportHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportHeaderNull() {
                this[this.tableDtbSaleReports.ReportHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNumNull() {
                return this.IsNull(this.tableDtbSaleReports.ReferenceNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNumNull() {
                this[this.tableDtbSaleReports.ReferenceNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportTypeStrNull() {
                return this.IsNull(this.tableDtbSaleReports.ReportTypeStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportTypeStrNull() {
                this[this.tableDtbSaleReports.ReportTypeStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleOrderIdNull() {
                return this.IsNull(this.tableDtbSaleReports.SaleOrderIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleOrderIdNull() {
                this[this.tableDtbSaleReports.SaleOrderIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositAmountNull() {
                return this.IsNull(this.tableDtbSaleReports.DepositAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositAmountNull() {
                this[this.tableDtbSaleReports.DepositAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableDtbSaleReports.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableDtbSaleReports.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryStrNull() {
                return this.IsNull(this.tableDtbSaleReports.CategoryStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryStrNull() {
                this[this.tableDtbSaleReports.CategoryStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseUnitPriceNull() {
                return this.IsNull(this.tableDtbSaleReports.PurchaseUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseUnitPriceNull() {
                this[this.tableDtbSaleReports.PurchaseUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyBonusNull() {
                return this.IsNull(this.tableDtbSaleReports.QtyBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyBonusNull() {
                this[this.tableDtbSaleReports.QtyBonusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DtbExpensesRow : global::System.Data.DataRow {
            
            private DtbExpensesDataTable tableDtbExpenses;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbExpensesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbExpenses = ((DtbExpensesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExpenseId {
                get {
                    return ((int)(this[this.tableDtbExpenses.ExpenseIdColumn]));
                }
                set {
                    this[this.tableDtbExpenses.ExpenseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExpenseTypeId {
                get {
                    try {
                        return ((int)(this[this.tableDtbExpenses.ExpenseTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseTypeId\' in table \'DtbExpenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbExpenses.ExpenseTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExpenseTypeStr {
                get {
                    try {
                        return ((string)(this[this.tableDtbExpenses.ExpenseTypeStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseTypeStr\' in table \'DtbExpenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbExpenses.ExpenseTypeStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ExpenseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbExpenses.ExpenseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseDate\' in table \'DtbExpenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbExpenses.ExpenseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableDtbExpenses.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'DtbExpenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbExpenses.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExpenseAmountInt {
                get {
                    try {
                        return ((double)(this[this.tableDtbExpenses.ExpenseAmountIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseAmountInt\' in table \'DtbExpenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbExpenses.ExpenseAmountIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExpenseAmountRiel {
                get {
                    try {
                        return ((double)(this[this.tableDtbExpenses.ExpenseAmountRielColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpenseAmountRiel\' in table \'DtbExpenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbExpenses.ExpenseAmountRielColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CurrencyId {
                get {
                    try {
                        return ((int)(this[this.tableDtbExpenses.CurrencyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyId\' in table \'DtbExpenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbExpenses.CurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExchangeRate {
                get {
                    try {
                        return ((double)(this[this.tableDtbExpenses.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'DtbExpenses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbExpenses.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpenseTypeIdNull() {
                return this.IsNull(this.tableDtbExpenses.ExpenseTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpenseTypeIdNull() {
                this[this.tableDtbExpenses.ExpenseTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpenseTypeStrNull() {
                return this.IsNull(this.tableDtbExpenses.ExpenseTypeStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpenseTypeStrNull() {
                this[this.tableDtbExpenses.ExpenseTypeStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpenseDateNull() {
                return this.IsNull(this.tableDtbExpenses.ExpenseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpenseDateNull() {
                this[this.tableDtbExpenses.ExpenseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableDtbExpenses.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableDtbExpenses.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpenseAmountIntNull() {
                return this.IsNull(this.tableDtbExpenses.ExpenseAmountIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpenseAmountIntNull() {
                this[this.tableDtbExpenses.ExpenseAmountIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpenseAmountRielNull() {
                return this.IsNull(this.tableDtbExpenses.ExpenseAmountRielColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpenseAmountRielNull() {
                this[this.tableDtbExpenses.ExpenseAmountRielColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyIdNull() {
                return this.IsNull(this.tableDtbExpenses.CurrencyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyIdNull() {
                this[this.tableDtbExpenses.CurrencyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableDtbExpenses.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExchangeRateNull() {
                this[this.tableDtbExpenses.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DtbDepositsRow : global::System.Data.DataRow {
            
            private DtbDepositsDataTable tableDtbDeposits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DtbDepositsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtbDeposits = ((DtbDepositsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DepositId {
                get {
                    return ((int)(this[this.tableDtbDeposits.DepositIdColumn]));
                }
                set {
                    this[this.tableDtbDeposits.DepositIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepositNumber {
                get {
                    try {
                        return ((string)(this[this.tableDtbDeposits.DepositNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositNumber\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.DepositNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DepositDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbDeposits.DepositDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositDate\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.DepositDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableDtbDeposits.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CashierName {
                get {
                    try {
                        return ((string)(this[this.tableDtbDeposits.CashierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashierName\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.CashierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ExchangeRate {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountSoldInt {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.AmountSoldIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountSoldInt\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.AmountSoldIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountPaidInt {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.AmountPaidIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaidInt\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.AmountPaidIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountPaidRiel {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.AmountPaidRielColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPaidRiel\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.AmountPaidRielColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountReturnInt {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.AmountReturnIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountReturnInt\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.AmountReturnIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AmountReturnRiel {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.AmountReturnRielColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountReturnRiel\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.AmountReturnRielColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalDiscount {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.TotalDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDiscount\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.TotalDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableDtbDeposits.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPriceIn {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.UnitPriceInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceIn\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.UnitPriceInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitPriceOut {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.UnitPriceOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceOut\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.UnitPriceOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Discount {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QtySold {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.QtySoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtySold\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.QtySoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SubTotal {
                get {
                    try {
                        return ((double)(this[this.tableDtbDeposits.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotal\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.SubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DepositItemId {
                get {
                    try {
                        return ((int)(this[this.tableDtbDeposits.DepositItemIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositItemId\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.DepositItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProductId {
                get {
                    try {
                        return ((int)(this[this.tableDtbDeposits.ProductIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductId\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.ProductIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CardNumber {
                get {
                    try {
                        return ((string)(this[this.tableDtbDeposits.CardNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardNumber\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.CardNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDtbDeposits.UpdateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateDate\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.UpdateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceNum {
                get {
                    try {
                        return ((string)(this[this.tableDtbDeposits.ReferenceNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceNum\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.ReferenceNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableDtbDeposits.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportHeader {
                get {
                    try {
                        return ((string)(this[this.tableDtbDeposits.ReportHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportHeader\' in table \'DtbDeposits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtbDeposits.ReportHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositNumberNull() {
                return this.IsNull(this.tableDtbDeposits.DepositNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositNumberNull() {
                this[this.tableDtbDeposits.DepositNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositDateNull() {
                return this.IsNull(this.tableDtbDeposits.DepositDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositDateNull() {
                this[this.tableDtbDeposits.DepositDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableDtbDeposits.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableDtbDeposits.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashierNameNull() {
                return this.IsNull(this.tableDtbDeposits.CashierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashierNameNull() {
                this[this.tableDtbDeposits.CashierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableDtbDeposits.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExchangeRateNull() {
                this[this.tableDtbDeposits.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountSoldIntNull() {
                return this.IsNull(this.tableDtbDeposits.AmountSoldIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountSoldIntNull() {
                this[this.tableDtbDeposits.AmountSoldIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountPaidIntNull() {
                return this.IsNull(this.tableDtbDeposits.AmountPaidIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountPaidIntNull() {
                this[this.tableDtbDeposits.AmountPaidIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountPaidRielNull() {
                return this.IsNull(this.tableDtbDeposits.AmountPaidRielColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountPaidRielNull() {
                this[this.tableDtbDeposits.AmountPaidRielColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountReturnIntNull() {
                return this.IsNull(this.tableDtbDeposits.AmountReturnIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountReturnIntNull() {
                this[this.tableDtbDeposits.AmountReturnIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountReturnRielNull() {
                return this.IsNull(this.tableDtbDeposits.AmountReturnRielColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountReturnRielNull() {
                this[this.tableDtbDeposits.AmountReturnRielColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDiscountNull() {
                return this.IsNull(this.tableDtbDeposits.TotalDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDiscountNull() {
                this[this.tableDtbDeposits.TotalDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableDtbDeposits.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableDtbDeposits.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceInNull() {
                return this.IsNull(this.tableDtbDeposits.UnitPriceInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceInNull() {
                this[this.tableDtbDeposits.UnitPriceInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceOutNull() {
                return this.IsNull(this.tableDtbDeposits.UnitPriceOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceOutNull() {
                this[this.tableDtbDeposits.UnitPriceOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableDtbDeposits.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableDtbDeposits.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtySoldNull() {
                return this.IsNull(this.tableDtbDeposits.QtySoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtySoldNull() {
                this[this.tableDtbDeposits.QtySoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.tableDtbDeposits.SubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.tableDtbDeposits.SubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositItemIdNull() {
                return this.IsNull(this.tableDtbDeposits.DepositItemIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositItemIdNull() {
                this[this.tableDtbDeposits.DepositItemIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductIdNull() {
                return this.IsNull(this.tableDtbDeposits.ProductIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductIdNull() {
                this[this.tableDtbDeposits.ProductIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCardNumberNull() {
                return this.IsNull(this.tableDtbDeposits.CardNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCardNumberNull() {
                this[this.tableDtbDeposits.CardNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateNull() {
                return this.IsNull(this.tableDtbDeposits.UpdateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateNull() {
                this[this.tableDtbDeposits.UpdateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNumNull() {
                return this.IsNull(this.tableDtbDeposits.ReferenceNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNumNull() {
                this[this.tableDtbDeposits.ReferenceNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableDtbDeposits.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableDtbDeposits.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportHeaderNull() {
                return this.IsNull(this.tableDtbDeposits.ReportHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportHeaderNull() {
                this[this.tableDtbDeposits.ReportHeaderColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DtbProductsRowChangeEvent : global::System.EventArgs {
            
            private DtbProductsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductsRowChangeEvent(DtbProductsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbProductsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DtbSaleReportsRowChangeEvent : global::System.EventArgs {
            
            private DtbSaleReportsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbSaleReportsRowChangeEvent(DtbSaleReportsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbSaleReportsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DtbExpensesRowChangeEvent : global::System.EventArgs {
            
            private DtbExpensesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbExpensesRowChangeEvent(DtbExpensesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbExpensesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DtbDepositsRowChangeEvent : global::System.EventArgs {
            
            private DtbDepositsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbDepositsRowChangeEvent(DtbDepositsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DtbDepositsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591